name: Release

on:
  push:
    tags:
      - "v*.*.*"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-test:
    name: Build & Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    outputs:
      archive-name: ${{ steps.set-archive-name.outputs.archive_name }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@1.86.0
        with:
          components: clippy, rustfmt

      - uses: actions/cache@v3
        with:
          path: target
          key: ${{ runner.os }}-target-${{ hashFiles('Cargo.lock') }}

      - run: cargo test
      - run: cargo build --release

      - name: Set archive name
        id: set-archive-name
        run: |
          echo "archive_name=radb-${{ runner.os }}.zip" >> $GITHUB_OUTPUT

      - name: Prepare distribution folder
        run: |
          mkdir -p dist/bin
          cp -v target/release/bank dist/bin/ || true
          cp -v target/release/radb dist/bin/ || true
          cp -v target/release/radump dist/bin/ || true
          cp -v target/release/rasql dist/bin/ || true
          cp -rv clusters/docker dist/nodes

      - name: Package binary
        run: |
          cd dist
          zip -r ${{ steps.set-archive-name.outputs.archive_name }} .
        shell: bash

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-archive-name.outputs.archive_name }}
          path: dist/${{ steps.set-archive-name.outputs.archive_name }}

  release:
    name: Create GitHub Release
    needs: build-test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Publish to GitHub Releases
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/**/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
